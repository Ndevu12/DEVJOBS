{"ast":null,"code":"var _jsxFileName = \"/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Accounts/Jobs/AccountJobs.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport transformTime from '../../../utils/transformTime';\nimport './AccountJobs.css';\nimport Notification from \"../../Notification/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3000';\nconst AccountJobs = props => {\n  _s();\n  const [notification, setNotification] = useState('');\n  const [jobsData, setJobs] = useState(props.jobsData);\n  const jobViewHandler = event => {\n    const jobId = event.currentTarget.getAttribute('id');\n    for (const job of jobsData) {\n      if (job.id === jobId) {\n        props.setIsViewJob(job);\n      }\n    }\n  };\n  const token = localStorage.getItem('token');\n  const deleteJobHandler = async event => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/jobs/${event.target.getAttribute('id')}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setNotification('Job was Deleted.');\n        setTimeout(() => {\n          setNotification('');\n        }, 3000);\n      } else {\n        setNotification('Something went wrong');\n        setTimeout(() => {\n          setNotification('');\n        }, 3000);\n      }\n    } catch (error) {\n      setNotification('Something went wrong');\n      setTimeout(() => {\n        setNotification('');\n      }, 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobs account--jobs\",\n    children: [notification.length ? /*#__PURE__*/_jsxDEV(Notification, {\n      text: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 36\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"account--jobs-title\",\n      children: props.accountType === 'company' ? 'Your Jobs' : 'Applied Jobs'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), jobsData.length ? jobsData.map(job => {\n      var _job$company;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          style: {\n            backgroundColor: job.company.logoBackground\n          },\n          className: \"company--photo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${API_BASE_URL}/${job.company.logo}`,\n            alt: job.company + \"-photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__time\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"job__postedat\",\n            children: transformTime(job.postedAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"job__time_separator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"job__contract\",\n            children: job.contract\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__position\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: jobViewHandler,\n            id: String(job.id),\n            children: job.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__company\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_job$company = job.company) === null || _job$company === void 0 ? void 0 : _job$company.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__location\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this), props.accountType === 'company' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account--job-action\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => {\n                if (props.setJobEdit) {\n                  props.setJobEdit(event.target.getAttribute('id'));\n                }\n              },\n              className: \"account--job-edit\",\n              id: job.id,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: deleteJobHandler,\n              id: job.id,\n              className: \"account--job-delete\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no Jobs found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(AccountJobs, \"FrkH4wvqDLPJ0wZpPydETTANSMM=\");\n_c = AccountJobs;\nexport default AccountJobs;\nvar _c;\n$RefreshReg$(_c, \"AccountJobs\");","map":{"version":3,"names":["React","useState","transformTime","Notification","jsxDEV","_jsxDEV","API_BASE_URL","AccountJobs","props","_s","notification","setNotification","jobsData","setJobs","jobViewHandler","event","jobId","currentTarget","getAttribute","job","id","setIsViewJob","token","localStorage","getItem","deleteJobHandler","response","fetch","target","method","headers","ok","setTimeout","error","className","children","length","text","fileName","_jsxFileName","lineNumber","columnNumber","accountType","map","_job$company","style","backgroundColor","company","logoBackground","src","logo","alt","postedAt","contract","onClick","String","position","name","location","setJobEdit","_c","$RefreshReg$"],"sources":["/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Accounts/Jobs/AccountJobs.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport transformTime from '../../../utils/transformTime';\n\nimport './AccountJobs.css';\n\nimport Notification from \"../../Notification/Notification\";\n\n\ninterface props {\n    setIsViewJob: (value: any) => void\n    companyId?: string;\n    jobsData: JobType[];\n    accountType: string;\n    setJobEdit?: (id: string) => void;\n}\n\ninterface CompanyType {\n    name?: string;\n    logo?: string;\n    logoBackground?: string;\n    website?: string;\n}\n\ninterface JobType {\n    id?: string;\n    position?: string;\n    postedAt?: string;\n    contract?: string;\n    location?: string;\n    apply?: string;\n    description?: string;\n    companyId?: string;\n    company?: CompanyType;\n}\n\nconst API_BASE_URL = 'http://localhost:3000';\n\nconst AccountJobs = (props: props) => {\n    const [notification, setNotification] = useState('');\n    const [jobsData, setJobs] = useState<JobType[]>(props.jobsData);\n    \n\n    const jobViewHandler = (event: React.MouseEvent) => {\n        const jobId = (event.currentTarget as HTMLElement).getAttribute('id')!;\n\n        for (const job of jobsData) {\n            if (job.id === jobId) {\n                props.setIsViewJob(job);\n            }\n        }\n    }\n\n    const token = localStorage.getItem('token')\n\n    const deleteJobHandler = async (event: React.FormEvent) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/api/jobs/${(event.target as HTMLElement).getAttribute('id')}`,\n                {\n                    method: 'DELETE',\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                })\n\n            if (response.ok) {\n                setNotification('Job was Deleted.');\n\n                setTimeout(() => {\n                    setNotification('');\n                }, 3000);\n            }\n            else {\n                setNotification('Something went wrong');\n\n                setTimeout(() => {\n                    setNotification('')\n                }, 3000);\n            }\n        } catch (error) {\n            setNotification('Something went wrong');\n\n            setTimeout(() => {\n                setNotification('')\n            }, 3000);\n        }\n    }\n\n    return (\n        <div className=\"jobs account--jobs\">\n            {notification.length ? <Notification text={notification} /> : ''}\n            <p className=\"account--jobs-title\">{props.accountType === 'company' ? 'Your Jobs' : 'Applied Jobs'}</p>\n            {\n                jobsData.length ? jobsData!.map((job) => {\n                    return (\n                        <div key={job.id} className=\"job\">\n                            <figure\n                                style={{ backgroundColor: job.company!.logoBackground }}\n                                className=\"company--photo\">\n                                <img\n                                    src={`${API_BASE_URL}/${job.company!.logo}`}\n                                    alt={job.company + \"-photo\"}\n                                />\n                            </figure>\n                            <div className=\"job__time\">\n                                <span className=\"job__postedat\">{transformTime(job.postedAt)}</span>\n                                <span className=\"job__time_separator\"></span>\n                                <span className=\"job__contract\">{job.contract}</span>\n                            </div>\n                            <div className=\"job__position\">\n                                <span\n                                    onClick={jobViewHandler}\n                                    id={String(job.id)}>\n                                    {job.position}\n                                </span>\n                            </div>\n                            <div className=\"job__company\">\n                                <p>{job.company?.name}</p>\n                            </div>\n                            <div className=\"job__location\">\n                                <p>{job.location}</p>\n                                {(props.accountType === 'company') && <div className=\"account--job-action\">\n                                    <p onClick={(event) => {\n                                        if (props.setJobEdit) {\n                                            props.setJobEdit((event.target as HTMLElement).getAttribute('id')!)\n                                        }\n                                    }} \n                                    className=\"account--job-edit\" \n                                    id={job.id}>Edit</p>\n\n                                    <p onClick={deleteJobHandler} id={job.id} className=\"account--job-delete\">Delete</p>\n                                </div>}\n                            </div>\n                        </div>\n                    );\n                })\n                    :\n                    <p>no Jobs found</p>\n            }\n        </div>\n    );\n};\n\nexport default AccountJobs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}