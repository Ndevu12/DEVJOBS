{"ast":null,"code":"var _jsxFileName = \"/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Auth/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"../../Buttons/Button\";\nimport \"../../../styles/\";\nimport Notification from \"../../Notification/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst Login = props => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [notification, setNotification] = useState(\"\");\n  const [isCompany, setIsCompany] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const signUpFormLink = () => {\n    props.signUpFormActive();\n  };\n  const loginFormHandler = async event => {\n    event.preventDefault();\n    setLoading(true);\n    let response;\n    try {\n      if (isCompany) {\n        response = await fetch(`${API_BASE_URL}/api/auth/company/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        localStorage.setItem(\"accountType\", \"company\");\n      } else {\n        response = await fetch(`${API_BASE_URL}/api/auth/user/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        localStorage.setItem(\"accountType\", \"user\");\n      }\n      if (response.ok) {\n        const {\n          token,\n          refreshToken\n        } = await response.json();\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n        setNotification(\"Login successful! Welcome!\");\n        props.removeAuth();\n        setLoading(false);\n      } else if (response.status === 401) {\n        setNotification(\"Invalid Credentials.\");\n        setLoading(false);\n      } else {\n        throw new Error(\"\");\n      }\n      setTimeout(() => {\n        setNotification(\"\");\n      }, 3000);\n    } catch (error) {\n      setNotification(\"Something went wrong, Try again!\");\n      setTimeout(() => {\n        setNotification(\"\");\n      }, 3000);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    onSubmit: loginFormHandler,\n    className: \"form\",\n    children: [isCompany && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"badge\",\n      children: \"Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this), notification.length ? /*#__PURE__*/_jsxDEV(Notification, {\n      text: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 30\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleInputChange,\n        placeholder: \"example@gmail.com\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleInputChange,\n        placeholder: \"Your password\",\n        id: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub--form-action\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sign-as\",\n        children: [isCompany ? \"For non-company users sign in \" : \"Sign in as a company \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login--signup-here\",\n          onClick: () => {\n            setIsCompany(!isCompany);\n          },\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have account\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login--signup-here\",\n          onClick: signUpFormLink,\n          children: [\" \", \"Sign up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"\",\n      text: \"Login\",\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"QF9XcTHjnSbetSMXFSZUtbpuDwk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Button","Notification","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Login","props","_s","loading","setLoading","notification","setNotification","isCompany","setIsCompany","formData","setFormData","email","password","handleInputChange","event","name","value","target","signUpFormLink","signUpFormActive","loginFormHandler","preventDefault","response","fetch","method","headers","body","JSON","stringify","localStorage","setItem","ok","token","refreshToken","json","removeAuth","status","Error","setTimeout","error","action","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","text","htmlFor","type","onChange","placeholder","id","required","onClick","_c","$RefreshReg$"],"sources":["/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Auth/Login/Login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"../../Buttons/Button\";\n\nimport \"../../../styles/\";\nimport Notification from \"../../Notification/Notification\";\n\ninterface propsType {\n  signUpFormActive: () => void;\n  removeAuth: () => void;\n}\n\ninterface FormData {\n  email: string;\n  password: string;\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst Login = (props: propsType) => {\n  const [loading, setLoading] = useState(false);\n  const [notification, setNotification] = useState(\"\");\n  const [isCompany, setIsCompany] = useState(false);\n  const [formData, setFormData] = useState<FormData>({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const signUpFormLink = () => {\n    props.signUpFormActive();\n  };\n\n  const loginFormHandler = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setLoading(true);\n    let response;\n\n    try {\n      if (isCompany) {\n        response = await fetch(`${API_BASE_URL}/api/auth/company/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        });\n        localStorage.setItem(\"accountType\", \"company\");\n      } else {\n        response = await fetch(`${API_BASE_URL}/api/auth/user/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        });\n\n        localStorage.setItem(\"accountType\", \"user\");\n      }\n\n      if (response.ok) {\n        const { token, refreshToken } = await response.json();\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n        setNotification(\"Login successful! Welcome!\");\n        props.removeAuth();\n        setLoading(false);\n      } else if (response.status === 401) {\n        setNotification(\"Invalid Credentials.\");\n        setLoading(false);\n      } else {\n        throw new Error(\"\");\n      }\n      setTimeout(() => {\n        setNotification(\"\");\n      }, 3000);\n    } catch (error) {\n      setNotification(\"Something went wrong, Try again!\");\n      setTimeout(() => {\n        setNotification(\"\");\n      }, 3000);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form action=\"\" onSubmit={loginFormHandler} className=\"form\">\n      {isCompany && <div className=\"badge\">Company</div>}\n      {notification.length ? <Notification text={notification} /> : \"\"}\n      <h2>Login</h2>\n      <label htmlFor=\"email\">\n        <span>Email</span>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleInputChange}\n          placeholder=\"example@gmail.com\"\n          id=\"email\"\n        />\n      </label>\n      <label htmlFor=\"password\">\n        <span>Password</span>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formData.password}\n          onChange={handleInputChange}\n          placeholder=\"Your password\"\n          id=\"password\"\n          required\n        />\n      </label>\n      <div className=\"sub--form-action\">\n        <p className=\"sign-as\">\n          {isCompany\n            ? \"For non-company users sign in \"\n            : \"Sign in as a company \"}\n          <span\n            className=\"login--signup-here\"\n            onClick={() => {\n              setIsCompany(!isCompany);\n            }}\n          >\n            here\n          </span>\n        </p>\n        <p>\n          Don't have account\n          <span className=\"login--signup-here\" onClick={signUpFormLink}>\n            {\" \"}\n            Sign up\n          </span>\n        </p>\n      </div>\n      <Button className=\"\" text=\"Login\" loading={loading} />\n    </form>\n  );\n};\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}