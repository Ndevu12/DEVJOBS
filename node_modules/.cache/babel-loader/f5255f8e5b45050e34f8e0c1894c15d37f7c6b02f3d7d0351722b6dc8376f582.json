{"ast":null,"code":"var _jsxFileName = \"/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Accounts/Company.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Button from '../UI/Button';\nimport Button2 from '../UI/Button2';\nimport AccountJobs from './Jobs/AccountJobs';\nimport './Company.css';\nimport PostJob from './Jobs/PostJob';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst Company = props => {\n  _s();\n  const [updateFormData, setUpdateFormData] = useState({});\n  const [accountData, setAccountData] = useState();\n  const [notification, setNotification] = useState('');\n  const [newJobFrom, setNewJobForm] = useState(false);\n  useEffect(() => {\n    const fetchAccountInfo = async () => {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${API_BASE_URL}/api/account`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const account = (await response.json()).account;\n        setAccountData({\n          ...account\n        });\n      }\n    };\n    fetchAccountInfo();\n  });\n  const setIsViewJobHandler = job => {\n    props.setIsViewJob(job);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('isCompany');\n    props.removeAccount();\n  };\n\n  // FORM EDIT HANDLER\n  const setJobEditHandler = id => {\n    setUpdateFormData({\n      mode: 'edit',\n      data: accountData === null || accountData === void 0 ? void 0 : accountData.Jobs.filter(job => {\n        if (job.id === id) {\n          return true;\n        }\n      })\n    });\n    setNewJobForm(true);\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company\",\n    children: [!newJobFrom && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account--info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"company__header_name\",\n          children: accountData === null || accountData === void 0 ? void 0 : accountData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"company__header_email\",\n          children: accountData === null || accountData === void 0 ? void 0 : accountData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company--main-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            setNewJobForm(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(Button2, {\n            className: \"\",\n            text: \"Post New Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: logoutHandler,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"\",\n            text: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }, this), newJobFrom && /*#__PURE__*/_jsxDEV(PostJob, {\n      formCancelHandler: () => {\n        setNewJobForm(false);\n        setUpdateFormData({});\n      },\n      formData: updateFormData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }, this), !newJobFrom && accountData && /*#__PURE__*/_jsxDEV(AccountJobs, {\n      accountType: \"company\",\n      setIsViewJob: setIsViewJobHandler,\n      jobsData: accountData.Jobs,\n      setJobEdit: setJobEditHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 12\n  }, this);\n};\n_s(Company, \"4ZEjMDv6vo2wx2QkJnt1WBvokp4=\");\n_c = Company;\nexport default Company;\nvar _c;\n$RefreshReg$(_c, \"Company\");","map":{"version":3,"names":["useEffect","useState","Button","Button2","AccountJobs","PostJob","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Company","props","_s","updateFormData","setUpdateFormData","accountData","setAccountData","notification","setNotification","newJobFrom","setNewJobForm","fetchAccountInfo","token","localStorage","getItem","response","fetch","headers","ok","account","json","setIsViewJobHandler","job","setIsViewJob","logoutHandler","removeItem","removeAccount","setJobEditHandler","id","mode","data","Jobs","filter","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","email","onClick","text","formCancelHandler","formData","accountType","jobsData","setJobEdit","_c","$RefreshReg$"],"sources":["/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Accounts/Company.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport Button from '../UI/Button';\nimport Button2 from '../UI/Button2';\nimport AccountJobs from './Jobs/AccountJobs';\n\nimport './Company.css';\nimport PostJob from './Jobs/PostJob';\n\ninterface Props {\n    setIsViewJob: (value: any) => void;\n    removeAccount: () => void;\n}\ninterface JobType {\n    id?: string;\n    position?: string;\n    postedAt?: string;\n    contract?: string;\n    location?: string;\n    apply?: string;\n    description?: string;\n    companyId?: string;\n}\n\ninterface AccountType {\n    id?: string;\n    name?: string;\n    email?: string;\n    website?: string;\n    logo?: string;\n    logoBackground?: string;\n    Jobs: JobType[];\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst Company = (props: Props) => {\n    const [updateFormData, setUpdateFormData] = useState({})\n    const [accountData, setAccountData] = useState<AccountType>();\n    const [notification, setNotification] = useState('');\n\n    const [newJobFrom, setNewJobForm] = useState(false);\n\n    useEffect(() => {\n        const fetchAccountInfo = async () => {\n            const token = localStorage.getItem('token');\n            const response = await fetch(`${API_BASE_URL}/api/account`,\n                {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                }\n            );\n\n            if (response.ok) {\n                const account = (await response.json()).account;\n\n                setAccountData({ ...account })\n            }\n        }\n        fetchAccountInfo();\n\n    })\n\n    const setIsViewJobHandler = (job: any) => {\n        props.setIsViewJob(job)\n    }\n\n    const logoutHandler = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        localStorage.removeItem('isCompany');\n        props.removeAccount();\n    }\n\n    // FORM EDIT HANDLER\n    const setJobEditHandler = (id: string) => {\n\n        setUpdateFormData({\n            mode: 'edit',\n            data: accountData?.Jobs.filter(job => {\n                if (job.id === id) {\n                    return true;\n                }\n            })\n        })\n        setNewJobForm(true);\n        return;\n    }\n\n    return <div className='company'>\n        {!newJobFrom && <div className='company__header'>\n            <div className=\"account--info\">\n                <p className='company__header_name'>{accountData?.name}</p>\n                <p className='company__header_email'>{accountData?.email}</p>\n            </div>\n            <div className='company--main-btn'>\n                <div onClick={() => { setNewJobForm(true) }}><Button2 className='' text='Post New Job' /></div>\n                <div onClick={logoutHandler}><Button className='' text='Log Out' /></div>\n            </div>\n        </div>}\n\n        {newJobFrom && <PostJob\n            formCancelHandler={() => { \n                setNewJobForm(false) \n                setUpdateFormData({})\n            }}\n            formData={updateFormData}\n        />}\n\n        {!newJobFrom && accountData && <AccountJobs\n            accountType='company'\n            setIsViewJob={setIsViewJobHandler}\n            jobsData={accountData.Jobs}\n\n            setJobEdit={setJobEditHandler}\n        />}\n    </div >\n}\n\nexport default Company;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}