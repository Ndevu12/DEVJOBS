{"ast":null,"code":"var _jsxFileName = \"/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Auth/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../../UI/Button';\nimport './Login.css';\nimport Notification from '../../Notification/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst Login = props => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [notification, setNotification] = useState('');\n  const [isCompany, setIsCompany] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const signUpFormLink = () => {\n    props.signUpFormActive();\n  };\n  const loginFormHandler = async event => {\n    event.preventDefault();\n    setLoading(true);\n    let response;\n    try {\n      if (isCompany) {\n        response = await fetch(`${API_BASE_URL}/api/auth/company/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        localStorage.setItem('accountType', 'company');\n      } else {\n        response = await fetch(`${API_BASE_URL}/api/auth/user/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        localStorage.setItem('accountType', 'user');\n      }\n      if (response.ok) {\n        const {\n          token,\n          refreshToken\n        } = await response.json();\n        localStorage.setItem('token', token);\n        localStorage.setItem('refreshToken', refreshToken);\n        setNotification('Login successful! Welcome!');\n        props.removeAuth();\n        setLoading(false);\n      } else if (response.status === 401) {\n        setNotification('Invalid Credentials.');\n        setLoading(false);\n      } else {\n        throw new Error('');\n      }\n      setTimeout(() => {\n        setNotification('');\n      }, 3000);\n    } catch (error) {\n      setNotification('Something went wrong, Try again!');\n      setTimeout(() => {\n        setNotification('');\n      }, 3000);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    onSubmit: loginFormHandler,\n    className: \"form\",\n    children: [isCompany && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"badge\",\n      children: \"Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }, this), notification.length ? /*#__PURE__*/_jsxDEV(Notification, {\n      text: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 32\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleInputChange,\n        placeholder: \"example@gmail.com\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleInputChange,\n        placeholder: \"Your password\",\n        id: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub--form-action\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sign-as\",\n        children: [isCompany ? 'For non-company users sign in ' : 'Sign in as a company ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login--signup-here\",\n          onClick: () => {\n            setIsCompany(!isCompany);\n          },\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have account\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login--signup-here\",\n          onClick: signUpFormLink,\n          children: \" Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"\",\n      text: \"Login\",\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 12\n  }, this);\n};\n_s(Login, \"tJeTMIfMPEBBOEIurhQOFu5dHjw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Button","Notification","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Login","props","_s","loading","setLoading","notification","setNotification","isCompany","setIsCompany","formData","setFormData","email","password","handleInputChange","event","name","value","target","signUpFormLink","signUpFormActive","loginFormHandler","preventDefault","response","fetch","method","headers","body","JSON","stringify","localStorage","setItem","ok","token","refreshToken","json","removeAuth","status","Error","setTimeout","error","action","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","text","htmlFor","type","onChange","placeholder","id","required","onClick","_c","$RefreshReg$"],"sources":["/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Auth/Login/Login.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nimport Button from '../../UI/Button'\n\nimport './Login.css'\nimport Notification from '../../Notification/Notification'\n\ninterface propsType {\n    signUpFormActive: () => void\n    removeAuth: () => void\n}\n\ninterface FormData {\n    email: string;\n    password: string;\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst Login = (props: propsType) => {\n    const [loading, setLoading] = useState(false);\n    const [notification, setNotification] = useState('');\n    const [isCompany, setIsCompany] = useState(false);\n    const [formData, setFormData] = useState<FormData>({\n        email: '',\n        password: ''\n    });\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target;\n\n        setFormData({\n            ...formData,\n            [name]: value\n        });\n    };\n\n    const signUpFormLink = () => {\n        props.signUpFormActive()\n    }\n\n    const loginFormHandler = async (event: React.FormEvent<HTMLFormElement>,) => {\n        event.preventDefault();\n        setLoading(true)\n        let response;\n\n        try {\n            if (isCompany) {\n                response = await fetch(`${API_BASE_URL}/api/auth/company/login`,\n                    {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(formData)\n                    }\n                );\n                localStorage.setItem('accountType', 'company');\n            } else {\n                response = await fetch(`${API_BASE_URL}/api/auth/user/login`,\n                    {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(formData)\n                    }\n                );\n\n                localStorage.setItem('accountType', 'user');\n            }\n\n            if (response.ok) {\n                const { token, refreshToken } = await response.json();\n                localStorage.setItem('token', token);\n                localStorage.setItem('refreshToken', refreshToken);\n                setNotification('Login successful! Welcome!')\n                props.removeAuth();\n                setLoading(false);\n            } else if (response.status === 401) {\n                setNotification('Invalid Credentials.')\n                setLoading(false)\n            } else {\n                throw new Error('');\n            }\n            setTimeout(() => {\n                setNotification('')\n            }, 3000);\n\n            \n        } catch (error) {\n            setNotification('Something went wrong, Try again!');\n            setTimeout(() => {\n                setNotification('')\n            }, 3000);\n            setLoading(false);\n        }\n    }\n\n    return <form action=\"\" onSubmit={loginFormHandler} className=\"form\">\n        {isCompany && <div className='badge'>Company</div>}\n        {notification.length ? <Notification text={notification} /> : ''}\n        <h2>Login</h2>\n        <label htmlFor=\"email\">\n            <span>Email</span>\n            <input type=\"email\" name='email' value={formData.email} onChange={handleInputChange} placeholder=\"example@gmail.com\" id=\"email\" />\n        </label>\n        <label htmlFor=\"password\">\n            <span>Password</span>\n            <input type=\"password\" name='password' value={formData.password} onChange={handleInputChange} placeholder=\"Your password\" id=\"password\" required />\n        </label>\n        <div className='sub--form-action' >\n            <p className='sign-as'>\n                {isCompany ? 'For non-company users sign in ' : 'Sign in as a company '}\n                <span className='login--signup-here' onClick={() => { setIsCompany(!isCompany) }}>here</span></p>\n            <p>\n                Don't have account\n                <span className='login--signup-here' onClick={signUpFormLink}> Sign up</span>\n            </p>\n        </div>\n        <Button className='' text='Login' loading={loading} />\n    </form>\n}\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}