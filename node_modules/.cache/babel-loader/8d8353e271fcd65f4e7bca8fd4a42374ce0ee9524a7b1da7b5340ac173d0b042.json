{"ast":null,"code":"var _jsxFileName = \"/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Accounts/Company.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\niii;\nimport Button from \"../Buttons/Button\";\nimport Button2 from \"../Buttons/Button2\";\nimport AccountJobs from \"./Jobs/AccountJobs\";\nimport \"./Company.css\";\nimport PostJob from \"./Jobs/PostJob\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst Company = props => {\n  _s();\n  const [updateFormData, setUpdateFormData] = useState({});\n  const [accountData, setAccountData] = useState();\n  const [notification, setNotification] = useState(\"\");\n  const [newJobFrom, setNewJobForm] = useState(false);\n  useEffect(() => {\n    const fetchAccountInfo = async () => {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${API_BASE_URL}/api/account`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const account = (await response.json()).account;\n        setAccountData({\n          ...account\n        });\n      }\n    };\n    fetchAccountInfo();\n  });\n  const setIsViewJobHandler = job => {\n    props.setIsViewJob(job);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"isCompany\");\n    props.removeAccount();\n  };\n\n  // FORM EDIT HANDLER\n  const setJobEditHandler = id => {\n    setUpdateFormData({\n      mode: \"edit\",\n      data: accountData === null || accountData === void 0 ? void 0 : accountData.Jobs.filter(job => {\n        if (job.id === id) {\n          return true;\n        }\n      })\n    });\n    setNewJobForm(true);\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company\",\n    children: [!newJobFrom && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account--info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"company__header_name\",\n          children: accountData === null || accountData === void 0 ? void 0 : accountData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"company__header_email\",\n          children: accountData === null || accountData === void 0 ? void 0 : accountData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company--main-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            setNewJobForm(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(Button2, {\n            className: \"\",\n            text: \"Post New Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: logoutHandler,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"\",\n            text: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), newJobFrom && /*#__PURE__*/_jsxDEV(PostJob, {\n      formCancelHandler: () => {\n        setNewJobForm(false);\n        setUpdateFormData({});\n      },\n      formData: updateFormData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), !newJobFrom && accountData && /*#__PURE__*/_jsxDEV(AccountJobs, {\n      accountType: \"company\",\n      setIsViewJob: setIsViewJobHandler,\n      jobsData: accountData.Jobs,\n      setJobEdit: setJobEditHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Company, \"bSOKga6z8RoepmgnFlsnle1Ptak=\");\n_c = Company;\nexport default Company;\nvar _c;\n$RefreshReg$(_c, \"Company\");","map":{"version":3,"names":["useEffect","useState","iii","Button","Button2","AccountJobs","PostJob","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Company","props","_s","updateFormData","setUpdateFormData","accountData","setAccountData","notification","setNotification","newJobFrom","setNewJobForm","fetchAccountInfo","token","localStorage","getItem","response","fetch","headers","Authorization","ok","account","json","setIsViewJobHandler","job","setIsViewJob","logoutHandler","removeItem","removeAccount","setJobEditHandler","id","mode","data","Jobs","filter","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","email","onClick","text","formCancelHandler","formData","accountType","jobsData","setJobEdit","_c","$RefreshReg$"],"sources":["/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Accounts/Company.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\niii\nimport Button from \"../Buttons/Button\";\nimport Button2 from \"../Buttons/Button2\";\nimport AccountJobs from \"./Jobs/AccountJobs\";\n\nimport \"./Company.css\";\nimport PostJob from \"./Jobs/PostJob\";\n\ninterface Props {\n  setIsViewJob: (value: any) => void;\n  removeAccount: () => void;\n}\ninterface JobType {\n  id?: string;\n  position?: string;\n  postedAt?: string;\n  contract?: string;\n  location?: string;\n  apply?: string;\n  description?: string;\n  companyId?: string;\n}\n\ninterface AccountType {\n  id?: string;\n  name?: string;\n  email?: string;\n  website?: string;\n  logo?: string;\n  logoBackground?: string;\n  Jobs: JobType[];\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst Company = (props: Props) => {\n  const [updateFormData, setUpdateFormData] = useState({});\n  const [accountData, setAccountData] = useState<AccountType>();\n  const [notification, setNotification] = useState(\"\");\n\n  const [newJobFrom, setNewJobForm] = useState(false);\n\n  useEffect(() => {\n    const fetchAccountInfo = async () => {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${API_BASE_URL}/api/account`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const account = (await response.json()).account;\n\n        setAccountData({ ...account });\n      }\n    };\n    fetchAccountInfo();\n  });\n\n  const setIsViewJobHandler = (job: any) => {\n    props.setIsViewJob(job);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"isCompany\");\n    props.removeAccount();\n  };\n\n  // FORM EDIT HANDLER\n  const setJobEditHandler = (id: string) => {\n    setUpdateFormData({\n      mode: \"edit\",\n      data: accountData?.Jobs.filter((job) => {\n        if (job.id === id) {\n          return true;\n        }\n      }),\n    });\n    setNewJobForm(true);\n    return;\n  };\n\n  return (\n    <div className=\"company\">\n      {!newJobFrom && (\n        <div className=\"company__header\">\n          <div className=\"account--info\">\n            <p className=\"company__header_name\">{accountData?.name}</p>\n            <p className=\"company__header_email\">{accountData?.email}</p>\n          </div>\n          <div className=\"company--main-btn\">\n            <div\n              onClick={() => {\n                setNewJobForm(true);\n              }}\n            >\n              <Button2 className=\"\" text=\"Post New Job\" />\n            </div>\n            <div onClick={logoutHandler}>\n              <Button className=\"\" text=\"Log Out\" />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {newJobFrom && (\n        <PostJob\n          formCancelHandler={() => {\n            setNewJobForm(false);\n            setUpdateFormData({});\n          }}\n          formData={updateFormData}\n        />\n      )}\n\n      {!newJobFrom && accountData && (\n        <AccountJobs\n          accountType=\"company\"\n          setIsViewJob={setIsViewJobHandler}\n          jobsData={accountData.Jobs}\n          setJobEdit={setJobEditHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Company;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}