{"ast":null,"code":"var _jsxFileName = \"/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Accounts/User.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Button from \"../Buttons/Button\";\nimport AccountJobs from \"./Jobs/AccountJobs\";\nimport \"../../styles/Company.css\";\nimport Notification from \"../Notification/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst User = props => {\n  _s();\n  const [accountData, setAccountData] = useState();\n  const [notification, setNotification] = useState(\"\");\n  useEffect(() => {\n    const fetchAccountInfo = async () => {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${API_BASE_URL}/api/account`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const account = (await response.json()).account;\n        setAccountData({\n          ...account\n        });\n      }\n    };\n    fetchAccountInfo();\n  });\n  const setIsViewJobHandler = job => {\n    props.setIsViewJob(job);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"accountType\");\n    setNotification(\"You're Logged Out\");\n    setTimeout(() => {\n      setNotification(\"\");\n      props.removeAccount();\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company\",\n    children: [notification.length ? /*#__PURE__*/_jsxDEV(Notification, {\n      text: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 30\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account--info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"company__header_name\",\n          children: accountData === null || accountData === void 0 ? void 0 : accountData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"company__header_email\",\n          children: accountData === null || accountData === void 0 ? void 0 : accountData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company--main-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: logoutHandler,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"\",\n            text: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), accountData && /*#__PURE__*/_jsxDEV(AccountJobs, {\n      accountType: \"user\",\n      setIsViewJob: setIsViewJobHandler,\n      jobsData: accountData.AppliedJobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(User, \"mqEOTBLKNZlRkTrLAw3HVFTiqCM=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["useEffect","useState","Button","AccountJobs","Notification","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","User","props","_s","accountData","setAccountData","notification","setNotification","fetchAccountInfo","token","localStorage","getItem","response","fetch","headers","Authorization","ok","account","json","setIsViewJobHandler","job","setIsViewJob","logoutHandler","removeItem","setTimeout","removeAccount","className","children","length","text","fileName","_jsxFileName","lineNumber","columnNumber","name","email","onClick","accountType","jobsData","AppliedJobs","_c","$RefreshReg$"],"sources":["/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Accounts/User.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport Button from \"../Buttons/Button\";\nimport Button2 from \"../Buttons/Button2\";\nimport AccountJobs from \"./Jobs/AccountJobs\";\n\nimport \"../../styles/Company.css\";\nimport PostJob from \"./Jobs/PostJob\";\nimport Notification from \"../Notification/Notification\";\n\ninterface Props {\n  setIsViewJob: (value: any) => void;\n  removeAccount: () => void;\n}\ninterface JobType {\n  id?: string;\n  position?: string;\n  postedAt?: string;\n  contract?: string;\n  location?: string;\n  apply?: string;\n  description?: string;\n  companyId?: string;\n}\n\ninterface AccountType {\n  id?: string;\n  name?: string;\n  email?: string;\n  website?: string;\n  logo?: string;\n  logoBackground?: string;\n  Jobs: JobType[];\n  AppliedJobs: JobType[];\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst User = (props: Props) => {\n  const [accountData, setAccountData] = useState<AccountType>();\n  const [notification, setNotification] = useState(\"\");\n\n  useEffect(() => {\n    const fetchAccountInfo = async () => {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${API_BASE_URL}/api/account`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const account = (await response.json()).account;\n\n        setAccountData({ ...account });\n      }\n    };\n    fetchAccountInfo();\n  });\n\n  const setIsViewJobHandler = (job: any) => {\n    props.setIsViewJob(job);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"accountType\");\n    setNotification(\"You're Logged Out\");\n\n    setTimeout(() => {\n      setNotification(\"\");\n      props.removeAccount();\n    }, 2000);\n  };\n\n  return (\n    <div className=\"company\">\n      {notification.length ? <Notification text={notification} /> : \"\"}\n      {\n        <div className=\"company__header\">\n          <div className=\"account--info\">\n            <p className=\"company__header_name\">{accountData?.name}</p>\n            <p className=\"company__header_email\">{accountData?.email}</p>\n          </div>\n          <div className=\"company--main-btn\">\n            <div onClick={logoutHandler}>\n              <Button className=\"\" text=\"Log Out\" />\n            </div>\n          </div>\n        </div>\n      }\n      {accountData && (\n        <AccountJobs\n          accountType=\"user\"\n          setIsViewJob={setIsViewJobHandler}\n          jobsData={accountData.AppliedJobs}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default User;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}