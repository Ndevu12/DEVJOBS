{"ast":null,"code":"var _jsxFileName = \"/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Jobs/Jobs.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport transformTime from \"../../utils/transformTime\";\nimport \"../../styles/Jobs.css\";\nimport Button from \"../Buttons/Button\";\nimport { PropagateLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst Jobs = props => {\n  _s();\n  let [loading, setLoading] = useState(true);\n  const [jobsData, setJobsData] = useState([]);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      const response = await fetch(`${API_BASE_URL}/jobs`);\n      if (response.ok) {\n        const jobs = (await response.json()).jobs;\n        if (props.filterData && (props.filterData.title || props.filterData.location || props.filterData.fulltime)) {\n          // console.log(props.filterData.title);\n          // console.log(props.filterData.location);\n          // console.log(props.filterData.fulltime);\n\n          const result = [];\n          for (let i = 0; i < jobs.length; i++) {\n            if (jobs[i].location.toLocaleLowerCase() === props.filterData.location.toLocaleLowerCase()) {\n              result.push(jobs[i]);\n            }\n            if (jobs[i].position.toLocaleLowerCase() === props.filterData.title.toLocaleLowerCase()) {\n              result.push(jobs[i]);\n            }\n            if (jobs[i].contract.toLocaleLowerCase() === (props.filterData.fulltime === \"on\" ? \"full time\" : \"part time\")) {\n              result.push(jobs[i]);\n            }\n          }\n          setJobsData([...Array.from(new Set(result))]);\n          return;\n        }\n        setJobsData([...jobs]);\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  });\n  const jobViewHandler = event => {\n    const jobId = event.currentTarget.getAttribute(\"id\");\n    for (const job of jobsData) {\n      if (job.id === jobId) {\n        props.setIsViewJob(job, \"view\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobs\",\n    children: [jobsData.length ? jobsData.map(job => {\n      var _job$company;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          style: {\n            backgroundColor: job.company.logoBackground\n          },\n          className: \"company--photo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${API_BASE_URL}/${job.company.logo}`,\n            alt: job.company + \"-photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__time\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"job__postedat\",\n            children: transformTime(job.postedAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"job__time_separator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"job__contract\",\n            children: job.contract\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__position\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: jobViewHandler,\n            id: String(job.id),\n            children: job.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__company\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_job$company = job.company) === null || _job$company === void 0 ? void 0 : _job$company.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job__location\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this);\n    }) : loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(PropagateLoader, {\n        color: \"#5964e0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no Jobs found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), jobsData.length > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs--lod-more\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"jobs--btn\",\n        text: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Jobs, \"Tt72Ki5vyEeUXYeNY/M9yftJUGU=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useEffect","useState","transformTime","Button","PropagateLoader","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Jobs","props","_s","loading","setLoading","jobsData","setJobsData","fetchJobs","response","fetch","ok","jobs","json","filterData","title","location","fulltime","result","i","length","toLocaleLowerCase","push","position","contract","Array","from","Set","jobViewHandler","event","jobId","currentTarget","getAttribute","job","id","setIsViewJob","className","children","map","_job$company","style","backgroundColor","company","logoBackground","src","logo","alt","fileName","_jsxFileName","lineNumber","columnNumber","postedAt","onClick","String","name","color","text","_c","$RefreshReg$"],"sources":["/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Jobs/Jobs.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport transformTime from \"../../utils/transformTime\";\n\nimport \"../../styles/Jobs.css\";\n\nimport Button from \"../Buttons/Button\";\nimport { PropagateLoader } from \"react-spinners\";\n\ninterface props {\n  filterData?: {\n    title?: string;\n    location?: string;\n    fulltime?: string;\n  };\n  setIsViewJob: (value: any, mode: string) => void;\n}\ninterface CompanyType {\n  name?: string;\n  logo?: string;\n  logoBackground?: string;\n  website?: string;\n}\n\ninterface JobType {\n  id?: string;\n  position?: string;\n  postedAt?: string;\n  contract?: string;\n  location?: string;\n  apply?: string;\n  description?: string;\n  companyId?: string;\n  company?: CompanyType;\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst Jobs = (props: props) => {\n  let [loading, setLoading] = useState(true);\n  const [jobsData, setJobsData] = useState<JobType[]>([]);\n\n  useEffect(() => {\n    const fetchJobs = async () => {\n      const response = await fetch(`${API_BASE_URL}/jobs`);\n\n      if (response.ok) {\n        const jobs: JobType[] = (await response.json()).jobs;\n\n        if (\n          props.filterData &&\n          (props.filterData.title ||\n            props.filterData.location ||\n            props.filterData.fulltime)\n        ) {\n          // console.log(props.filterData.title);\n          // console.log(props.filterData.location);\n          // console.log(props.filterData.fulltime);\n\n          const result = [];\n          for (let i = 0; i < jobs.length; i++) {\n            if (\n              jobs[i].location!.toLocaleLowerCase() ===\n              props.filterData.location!.toLocaleLowerCase()\n            ) {\n              result.push(jobs[i]);\n            }\n            if (\n              jobs[i].position!.toLocaleLowerCase() ===\n              props.filterData.title!.toLocaleLowerCase()\n            ) {\n              result.push(jobs[i]);\n            }\n            if (\n              jobs[i].contract!.toLocaleLowerCase() ===\n              (props.filterData.fulltime === \"on\" ? \"full time\" : \"part time\")\n            ) {\n              result.push(jobs[i]);\n            }\n          }\n\n          setJobsData([...Array.from(new Set(result))]);\n          return;\n        }\n\n        setJobsData([...jobs]);\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  });\n\n  const jobViewHandler = (event: React.MouseEvent) => {\n    const jobId = (event.currentTarget as HTMLElement).getAttribute(\"id\")!;\n\n    for (const job of jobsData) {\n      if (job.id === jobId) {\n        props.setIsViewJob(job, \"view\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"jobs\">\n      {jobsData.length ? (\n        jobsData!.map((job) => {\n          return (\n            <div key={job.id} className=\"job\">\n              <figure\n                style={{ backgroundColor: job.company!.logoBackground }}\n                className=\"company--photo\"\n              >\n                <img\n                  src={`${API_BASE_URL}/${job.company!.logo}`}\n                  alt={job.company + \"-photo\"}\n                />\n              </figure>\n              <div className=\"job__time\">\n                <span className=\"job__postedat\">\n                  {transformTime(job.postedAt)}\n                </span>\n                <span className=\"job__time_separator\"></span>\n                <span className=\"job__contract\">{job.contract}</span>\n              </div>\n              <div className=\"job__position\">\n                <span onClick={jobViewHandler} id={String(job.id)}>\n                  {job.position}\n                </span>\n              </div>\n              <div className=\"job__company\">\n                <p>{job.company?.name}</p>\n              </div>\n              <div className=\"job__location\">\n                <p>{job.location}</p>\n              </div>\n            </div>\n          );\n        })\n      ) : loading ? (\n        <div>\n          {\" \"}\n          <PropagateLoader color=\"#5964e0\" />{\" \"}\n        </div>\n      ) : (\n        <p>no Jobs found</p>\n      )}\n      {jobsData.length > 10 && (\n        <div className=\"jobs--lod-more\">\n          <Button className=\"jobs--btn\" text=\"Load More\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Jobs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}