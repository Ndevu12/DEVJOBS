{"ast":null,"code":"var _jsxFileName = \"/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Accounts/User.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Button from '../UI/Button';\nimport AccountJobs from './Jobs/AccountJobs';\nimport './Company.css';\nimport Notification from '../Notification/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst User = props => {\n  _s();\n  const [accountData, setAccountData] = useState();\n  const [notification, setNotification] = useState('');\n  useEffect(() => {\n    const fetchAccountInfo = async () => {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${API_BASE_URL}/api/account`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const account = (await response.json()).account;\n        setAccountData({\n          ...account\n        });\n      }\n    };\n    fetchAccountInfo();\n  });\n  const setIsViewJobHandler = job => {\n    props.setIsViewJob(job);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('accountType');\n    setNotification(\"You're Logged Out\");\n    setTimeout(() => {\n      setNotification('');\n      props.removeAccount();\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company\",\n    children: [notification.length ? /*#__PURE__*/_jsxDEV(Notification, {\n      text: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 32\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account--info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"company__header_name\",\n          children: accountData === null || accountData === void 0 ? void 0 : accountData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"company__header_email\",\n          children: accountData === null || accountData === void 0 ? void 0 : accountData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company--main-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: logoutHandler,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"\",\n            text: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }, this), accountData && /*#__PURE__*/_jsxDEV(AccountJobs, {\n      accountType: \"user\",\n      setIsViewJob: setIsViewJobHandler,\n      jobsData: accountData.AppliedJobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 12\n  }, this);\n};\n_s(User, \"un7tOP9HetprcyBTAML2KYqcb6E=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["useEffect","useState","Button","AccountJobs","Notification","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","User","props","_s","accountData","setAccountData","notification","setNotification","fetchAccountInfo","token","localStorage","getItem","response","fetch","headers","ok","account","json","setIsViewJobHandler","job","setIsViewJob","logoutHandler","removeItem","setTimeout","removeAccount","className","children","length","text","fileName","_jsxFileName","lineNumber","columnNumber","name","email","onClick","accountType","jobsData","AppliedJobs","_c","$RefreshReg$"],"sources":["/Users/ndevu/Desktop/Andela/DEVJOBS/src/components/Accounts/User.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport Button from '../UI/Button';\nimport Button2 from '../UI/Button2';\nimport AccountJobs from './Jobs/AccountJobs';\n\nimport './Company.css';\nimport PostJob from './Jobs/PostJob';\nimport Notification from '../Notification/Notification';\n\ninterface Props {\n    setIsViewJob: (value: any) => void;\n    removeAccount: () => void;\n}\ninterface JobType {\n    id?: string;\n    position?: string;\n    postedAt?: string;\n    contract?: string;\n    location?: string;\n    apply?: string;\n    description?: string;\n    companyId?: string;\n}\n\ninterface AccountType {\n    id?: string;\n    name?: string;\n    email?: string;\n    website?: string;\n    logo?: string;\n    logoBackground?: string;\n    Jobs: JobType[];\n    AppliedJobs: JobType[]\n}\n\n\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst User = (props: Props) => {\n    const [accountData, setAccountData] = useState<AccountType>();\n    const [notification, setNotification] = useState('');\n\n    useEffect(() => {\n        const fetchAccountInfo = async () => {\n            const token = localStorage.getItem('token');\n            const response = await fetch(`${API_BASE_URL}/api/account`,\n                {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                }\n            );\n\n            if (response.ok) {\n                const account = (await response.json()).account;\n\n                setAccountData({ ...account })\n            }\n        }\n        fetchAccountInfo();\n\n    })\n\n    const setIsViewJobHandler = (job: any) => {\n        props.setIsViewJob(job)\n    }\n\n    const logoutHandler = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        localStorage.removeItem('accountType');\n        setNotification(\"You're Logged Out\")\n\n        setTimeout(() => {\n            setNotification('');\n            props.removeAccount();\n        }, 2000);\n    }\n\n\n\n    return <div className='company'>\n        {notification.length ? <Notification text={notification} /> : ''}\n        {<div className='company__header'>\n            <div className=\"account--info\">\n                <p className='company__header_name'>{accountData?.name}</p>\n                <p className='company__header_email'>{accountData?.email}</p>\n            </div>\n            <div className='company--main-btn'>\n                <div onClick={logoutHandler}><Button className='' text='Log Out' /></div>\n            </div>\n        </div>}\n        {accountData && <AccountJobs\n            accountType='user'\n            setIsViewJob={setIsViewJobHandler}\n            jobsData={accountData.AppliedJobs}\n        />}\n    </div >\n}\n\nexport default User;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}